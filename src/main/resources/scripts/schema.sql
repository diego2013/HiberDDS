CREATE USER OPENICE2 IDENTIFIED BY OPENICE2
GRANT CREATE SESSION TO OPENICE2 WITH ADMIN OPTION;


CREATE TABLE NUMERIC (
	NUMERIC_ID NUMBER(10) NOT NULL,
	UNIQUE_DEVICE_IDENTIFIER VARCHAR2(64) NOT NULL,
	METRIC_ID VARCHAR2(64) NOT NULL,
	VENDOR_METRIC_ID VARCHAR2(64),
	INSTANCE_ID NUMBER(10) NOT NULL,
	UNIT_ID VARCHAR2(64),
	CONSTRAINT PK_NUMERIC PRIMARY KEY (NUMERIC_ID)
);

CREATE UNIQUE INDEX NUMERIC_UNIQUE_KEYS ON NUMERIC (UNIQUE_DEVICE_IDENTIFIER,METRIC_ID,VENDOR_METRIC_ID,INSTANCE_ID,UNIT_ID);

CREATE SEQUENCE NUMERIC_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE;

CREATE TABLE NUMERIC_LIFECYCLE (
	NUMERIC_LIFECYCLE_ID NUMBER(10) NOT NULL,
	ALIVE NUMBER(10),
	TIME TIMESTAMP(6),
	NUMERIC_ID NUMBER(10) NOT NULL,
	PRIMARY KEY (NUMERIC_LIFECYCLE_ID)
);

CREATE INDEX FK_LIFECYCLE_NUMERIC ON NUMERIC_LIFECYCLE (NUMERIC_ID);

ALTER TABLE NUMERIC_LIFECYCLE
	ADD FOREIGN KEY (NUMERIC_ID) 
	REFERENCES NUMERIC (NUMERIC_ID);

CREATE SEQUENCE  NUMERIC_LIFECYCLE_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE;

CREATE TABLE NUMERIC_SAMPLE (
	NUMERIC_SAMPLE_ID NUMBER(10) NOT NULL,
	SOURCE_TIME TIMESTAMP(6) NOT NULL,
	VALUE NUMBER(10) NOT NULL,
	NUMERIC_ID NUMBER(10) NOT NULL,
	PRIMARY KEY (NUMERIC_SAMPLE_ID)
);

CREATE INDEX FK_NUMERIC_ID ON NUMERIC_SAMPLE (NUMERIC_ID);

ALTER TABLE NUMERIC_SAMPLE
	ADD FOREIGN KEY (NUMERIC_ID) 
	REFERENCES NUMERIC (NUMERIC_ID);

CREATE SEQUENCE  NUMERIC_SAMPLE_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE;

CREATE OR REPLACE FUNCTION INSERT_UPDATE_NUMERIC(
   UNIQUE_DEVICE_IDENTIFIER IN varchar2,
   METRIC_ID IN varchar2,
   VENDOR_METRIC_ID IN varchar2,
   INSTANCE_ID IN decimal,
   UNIT_ID IN varchar2
   
) 
RETURN NUMBER
AS
NUMERIC_ID NUMBER(10);
BEGIN
 SELECT NUMERIC.NUMERIC_ID INTO insert_update_numeric.NUMERIC_ID FROM NUMERIC 
 	WHERE NUMERIC.UNIQUE_DEVICE_IDENTIFIER = insert_update_numeric.UNIQUE_DEVICE_IDENTIFIER AND 
 		  NUMERIC.METRIC_ID = insert_update_numeric.METRIC_ID AND 
 		  ((NUMERIC.VENDOR_METRIC_ID IS NULL AND insert_update_numeric.VENDOR_METRIC_ID IS NULL) OR NUMERIC.VENDOR_METRIC_ID = insert_update_numeric.VENDOR_METRIC_ID) AND
 		  NUMERIC.INSTANCE_ID = insert_update_numeric.INSTANCE_ID AND 
 		  ((NUMERIC.UNIT_ID IS NULL AND insert_update_numeric.UNIT_ID IS NULL) OR NUMERIC.UNIT_ID = insert_update_numeric.UNIT_ID);
 RETURN insert_update_numeric.NUMERIC_ID; 		  
 EXCEPTION WHEN NO_DATA_FOUND THEN
 BEGIN
    SELECT NUMERIC_SEQ.nextval into insert_update_numeric.NUMERIC_ID FROM dual;
    INSERT INTO NUMERIC (NUMERIC_ID, UNIQUE_DEVICE_IDENTIFIER, METRIC_ID, VENDOR_METRIC_ID, INSTANCE_ID, UNIT_ID) VALUES (insert_update_numeric.NUMERIC_ID, UNIQUE_DEVICE_IDENTIFIER, METRIC_ID, VENDOR_METRIC_ID, INSTANCE_ID, UNIT_ID);
    COMMIT;
    RETURN insert_update_numeric.NUMERIC_ID;
 END;
END;
/
show errors

--Device Connectivity
CREATE TABLE DEVICE_CONNECTIVITY(
	DEVICE_CONNECTIVITY_ID NUMBER(10) NOT NULL,
	UNIQUE_DEVICE_IDENTIFIER VARCHAR2(64) NOT NULL,
	CONSTRAINT PK_DEV_CONN PRIMARY KEY (DEVICE_CONNECTIVITY_ID)
);

CREATE UNIQUE INDEX DEV_CONN_UNIQUE_KEYS ON DEVICE_CONNECTIVITY (UNIQUE_DEVICE_IDENTIFIER);

CREATE SEQUENCE DEV_CONN_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE;

CREATE TABLE  DEVICE_CONNECTIVITY_LC(
	DEVCONN_LIFECYCLE_ID NUMBER(10) NOT NULL,
	DEVICE_CONNECTIVITY_ID NUMBER(10) NOT NULL,
	TIME TIMESTAMP(6),
	ALIVE NUMBER(10),
	PRIMARY KEY (DEVCONN_LIFECYCLE_ID),
);

CREATE INDEX FK_LIFECYCLE_DEVCONN ON DEVICE_CONNECTIVITY_LC (DEVICE_CONNECTIVITY_ID);

ALTER TABLE DEVICE_CONNECTIVITY_LC
	ADD FOREIGN KEY (DEVICE_CONNECTIVITY_ID) 
	REFERENCES NUMERIC (DEVICE_CONNECTIVITY_ID);

CREATE SEQUENCE  DEVCONN_LIFECYCLE_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE;

CREATE TABLE DEVICE_CONNECTIVITY_SAMPLE(
	DEVICE_CONNECTIVITY_ID NUMBER(10) NOT NULL,
	DEVCONN_SAMPLE_ID NUMBER(10) NOT NULL,
	CONNECTIONSTATE VARCHAR2(15),
	CONNECTIONTYPE VARCHAR2(10),
	INFO VARCHAR2(128),
	SOURCE_TIME TIMESTAMP(6),
	PRIMARY KEY (DEVCONN_SAMPLE_ID)
);

CREATE INDEX FK_DEVCONN_SAMPLE ON DEVICE_CONNECTIVITY_SAMPLE (DEVCONN_SAMPLE_ID);

ALTER TABLE DEVICE_CONNECTIVITY_SAMPLE
	ADD FOREIGN KEY (DEVICE_CONNECTIVITY_ID) 
	REFERENCES NUMERIC (DEVICE_CONNECTIVITY_ID);

CREATE SEQUENCE  DEVCONN_SAMPLE_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE;

CREATE OR REPLACE FUNCTION INSERT_UPDATE_DEVCONN(
   UNIQUE_DEVICE_IDENTIFIER IN varchar2
) 
RETURN NUMBER
AS
DEVICE_CONNECTIVITY_ID NUMBER;
BEGIN
 SELECT DEVICE_CONNECTIVITY_ID INTO DEVICE_CONNECTIVITY_ID FROM DEVICE_CONNECTIVITY WHERE UNIQUE_DEVICE_IDENTIFIER = INSERT_UPDATE_DEVCONN.UNIQUE_DEVICE_IDENTIFIER;
 EXCEPTION WHEN NO_DATA_FOUND THEN
 BEGIN
    SELECT DEV_CONN_SEQ.nextval into DEVICE_CONNECTIVITY_ID FROM dual;
    INSERT INTO DEVICE_CONNECTIVITY (DEVICE_CONNECTIVITY_ID, UNIQUE_DEVICE_IDENTIFIER) VALUES (DEVICE_CONNECTIVITY_ID, UNIQUE_DEVICE_IDENTIFIER);
 END;

 COMMIT;
 RETURN DEVICE_CONNECTIVITY_ID;
END;
/
--


